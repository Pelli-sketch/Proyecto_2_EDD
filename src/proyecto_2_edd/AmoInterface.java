/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_2_edd;

/**
 *
 * @author pablo
 */
public class AmoInterface extends javax.swing.JFrame {
    
    
    /**
     * Valor de caracteres maximos por linea
     */
    
    private final int MAX_CHARACTERS_PER_LINE = 60;

    /**
     * Constructor de AmoInterface cuando se le pasa la ventana principal y el lord a usar
     * 
     * @param mainInterface la ventana principal de la interfaz
     * @param amo el amo al cual se le van a mostrar los datos
     */

    public AmoInterface(MainInterface mainInterface, Amo amo) {
        this.setLocationRelativeTo(mainInterface);
        initComponents();
        
        String detalles = amo.DataImplementsToString().replace("\t\t", "|").replace("\t", "").replace("|", "\t");
        String[] lines = detalles.split("\n");
        this.jLabelTitleAmoInterface.setText(amo.fullName);
        this.jTextAreaDetails.setText("");
        for (int i = 1; i < lines.length; i++) {
            if (lines[i].length() > MAX_CHARACTERS_PER_LINE) {
                String[] innerStrings = lines[i].split(" ");
                int tamLinea = 0;
                for (int j = 0; j < innerStrings.length; j++) {
                    tamLinea += innerStrings[j].length() + 1;
                    if (tamLinea > MAX_CHARACTERS_PER_LINE) {
                        this.jTextAreaDetails.append(innerStrings[j] + "\n\t");
                        tamLinea = 0;
                    } else {
                        if (j == innerStrings.length - 1) {
                            this.jTextAreaDetails.append(innerStrings[j] + "\n");
                        } else {
                            this.jTextAreaDetails.append(innerStrings[j] + " ");
                        }
                    }
                }
            } else {
                this.jTextAreaDetails.append(lines[i] + "\n");
            }

        }
    }
  

    /**
     * Creates new form AmoInterface
     */
    public AmoInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitleAmoInterface = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDetails = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitleAmoInterface.setFont(new java.awt.Font("VALORANT", 1, 36)); // NOI18N
        jLabelTitleAmoInterface.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleAmoInterface.setText("amo");
        jLabelTitleAmoInterface.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.black, java.awt.Color.black));

        jTextAreaDetails.setColumns(20);
        jTextAreaDetails.setFont(new java.awt.Font("VALORANT", 0, 12)); // NOI18N
        jTextAreaDetails.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDetails);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitleAmoInterface, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitleAmoInterface)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AmoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AmoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AmoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AmoInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AmoInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelTitleAmoInterface;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDetails;
    // End of variables declaration//GEN-END:variables
}
